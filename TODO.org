#+TITLE: Todos
#+AUTHOR: Ryan Jensen

* DONE Add POST methods for Access Points
* DONE Add dropdowns for APTypes and Towers to new/edit Access Points form
** DONE Auto select tower/apt when appropriate
* DONE Add formatting to new/edit AP form
* DONE Refactor Navigation Tree
  Put in a helper module
* DONE Refactor/Add Database Helper Module
* TODO Add Access Point from Tower
  Not really done, but a link to where to do it.
* DONE Add Tower Types
** DONE Setup Database
** DONE Add List Page
** DONE Add new Modal
** DONE Add View Page
** DONE Add Edit Modal
** DONE Add TO UI Navbar
** DONE Add Breadcrumbs
** DONE Change DB to use list
** DONE Change Tower to use lists
* TODO Adjustable NavigationTree Pane
* TODO Fix errors on insert/update/delete
* DONE Add Backup fields
* TODO Add Comments fields
** TODO Towers
** TODO Access Points
* DONE Add documentation link fields on AP Types/SM Types
  This should be done similar to backups, by uploading files.
  For the equipment, make this in the equipment vs equipment type.
* TODO Indentation on Files
* TODO Add SM
** TODO Add SM Types
*** TODO Add List Page
*** TODO Add New Modal
*** TODO Add View Page
*** TODO Add Edit Modal
*** TODO Add to UI dropdown
*** TODO Add Breadcrumbs
** TODO Add List Page
** TODO Add new Modal
** TODO Add View Page
** TODO Add Edit Modal
** TODO Add TO UI Navbar
** TODO Add Breadcrumbs
* TODO Edit Permissions
* TODO Look into dropdowns for navbar
** TODO Also consider links from tower to tower type for example
* DONE Move Access Point Types to widget files
* TODO Set Homepage
* TODO Put in license and copyright
* TODO Tables to csv etc.
* TODO Add more info on APs in Tower view?
* TODO APTypes and TowerTypes to new format
* DONE Move tower_types to towers in pill navigation?
* TODO Change classes to use .syntax
* TODO Remove deleting of towertypes and ap types.
  This will cause major problems if we remove one which is still in use.
* TODO Try to factor out Esqueleto
* TODO Single edit widget
* TODO Standardize nameing of functions/widgets

* Refactor Backups -> FileStores
  1. Rename backups -> file_stores in DBeaver
  2. Rename Backup -> FileStore in models.persistentmodels
  3. Rename BackupId -> FileStoreId in routes.yesodroutes
  4. BackupId -> FileStoreId in Backup.hs
  5. backupContentType â†’ fileStoreContentType in Backup.hs
  6. backupFilename -> fileStoreFilename
  7. 
